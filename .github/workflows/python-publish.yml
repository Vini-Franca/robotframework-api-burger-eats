name: Robot Framework API Tests
on: [push]

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install API dependencies
        run: |
          cd api
          npm install
          npm start &  # Inicia a API em segundo plano

      - name: Install Python and Robot Framework
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Robot Framework dependencies
        run: |
          pip install robotframework
          pip install robotframework-yamllibrary
          pip install robotframework-requests
          pip install robot-mongodb-library

      - name: Run Robot Framework tests
        run: |
          robot --outputdir results --xunit output.xml tests/
        continue-on-error: true

      - name: Generate detailed test summary
        if: always()
        run: |
          # Instalar libxml2-utils que cont√©m xmllint
          sudo apt-get update
          sudo apt-get install -y libxml2-utils
          
          echo "# ü§ñ Robot Framework Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üìä Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|---------|" >> $GITHUB_STEP_SUMMARY
          
          # Extrair estat√≠sticas usando grep
          TOTAL=$(grep -oP 'total="[^"]+"' results/output.xml | head -1 | grep -oP '\d+')
          PASSED=$(grep -oP 'pass="[^"]+"' results/output.xml | head -1 | grep -oP '\d+')
          FAILED=$(grep -oP 'fail="[^"]+"' results/output.xml | head -1 | grep -oP '\d+')
          SKIPPED=0
          
          # Extrair dura√ß√£o
          START_TIME=$(grep -oP 'starttime="[^"]+"' results/output.xml | head -1 | grep -oP '\d{8} \d{2}:\d{2}:\d{2}\.\d{3}')
          END_TIME=$(grep -oP 'endtime="[^"]+"' results/output.xml | head -1 | grep -oP '\d{8} \d{2}:\d{2}:\d{2}\.\d{3}')
          
          # Garantir que temos valores, caso contr√°rio usar valores padr√£o
          TOTAL=${TOTAL:-0}
          PASSED=${PASSED:-0}
          FAILED=${FAILED:-0}
          
          # Formatando a tabela
          echo "| Total Tests | $TOTAL |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚úÖ Passed | $PASSED |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚ùå Failed | $FAILED |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚è≠Ô∏è Skipped | $SKIPPED |" >> $GITHUB_STEP_SUMMARY
          
          # Extrair e formatar a dura√ß√£o do arquivo de log
          if [ -f "results/log.html" ]; then
            DURATION=$(grep -oP 'Elapsed time: \K[^<]+' results/log.html)
            echo "| ‚è±Ô∏è Duration | $DURATION |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| ‚è±Ô∏è Duration | N/A |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "$FAILED" != "0" ]; then
            echo "## ‚ùå Failed Tests" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Case | Error Message |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|---------------|" >> $GITHUB_STEP_SUMMARY
            
            # Extrair detalhes dos testes falhos
            grep -A 2 '<test status="FAIL"' results/output.xml | \
            grep -E 'name="|<msg>' | \
            sed -E 's/.*name="([^"]+)".*/\1/;s/.*<msg>(.*)<\/msg>/\1/' | \
            paste -d '|' - - | \
            while IFS='|' read -r test_name error_msg; do
              echo "| $test_name | $error_msg |" >> $GITHUB_STEP_SUMMARY
            done
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-framework-results
          path: |
            results/report.html
            results/log.html
            results/output.xml
          retention-days: 30

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "results/output.xml"
          report_individual_runs: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
