name: Robot Framework API Tests
on: [push]

# Adiciona permiss√µes necess√°rias
permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install API dependencies
        run: |
          cd API
          npm install
          npm start &  # Inicia a API em segundo plano

      - name: Install Python and Robot Framework
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Robot Framework dependencies
        run: |
          pip install robotframework
          pip install robotframework-yamllibrary
          pip install robotframework-requests
          pip install robot-mongodb-library

      - name: Run Robot Framework tests
        run: |
          robot --outputdir results --xunit output.xml tests/
        continue-on-error: true  # Permite que o workflow continue mesmo se os testes falharem

      - name: Generate detailed test summary
        if: always()  # Executa mesmo se o passo anterior falhar
        run: |
          echo "# ü§ñ Robot Framework Test Results" >> $GITHUB_STEP_SUMMARY
          echo "## üìä Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          
          # Extrair estat√≠sticas b√°sicas
          TOTAL=$(grep -oP '(?<=total=")[^"]+' results/output.xml | head -1)
          PASSED=$(grep -oP '(?<=pass=")[^"]+' results/output.xml | head -1)
          FAILED=$(grep -oP '(?<=fail=")[^"]+' results/output.xml | head -1)
          SKIPPED=$(grep -oP '(?<=skip=")[^"]+' results/output.xml | head -1)
          
          echo "| Total Tests | $TOTAL |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚úÖ Passed | $PASSED |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚ùå Failed | $FAILED |" >> $GITHUB_STEP_SUMMARY
          echo "| ‚è≠Ô∏è Skipped | $SKIPPED |" >> $GITHUB_STEP_SUMMARY
          
          # Adicionar detalhes de tempo
          DURATION=$(grep -oP '(?<=elapsed=")[^"]+' results/output.xml | head -1)
          echo "| ‚è±Ô∏è Duration | $DURATION |" >> $GITHUB_STEP_SUMMARY
          
          # Adicionar se√ß√£o de testes falhos (se houver)
          if [ "$FAILED" != "0" ]; then
            echo -e "\n## ‚ùå Failed Tests" >> $GITHUB_STEP_SUMMARY
            echo "| Test Case | Error Message |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|----------------|" >> $GITHUB_STEP_SUMMARY
            
            # Extrai nome e mensagem de erro dos testes falhos
            grep -A 2 '<test status="FAIL"' results/output.xml | grep -E 'name="|<msg>' | \
            sed -E 's/.*name="([^"]+)".*/\1/;s/.*<msg>(.*)<\/msg>/\1/' | \
            paste -d '|' - - >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-framework-results
          path: |
            results/report.html
            results/log.html
            results/output.xml
          retention-days: 30

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "results/output.xml"
          report_individual_runs: true
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Explicitamente definindo o token
