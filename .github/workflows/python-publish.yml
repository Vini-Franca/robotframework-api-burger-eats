name: Robot Framework API Tests
on: [push]

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install API dependencies
        run: |
          cd api
          npm install
          npm start &  # Inicia a API em segundo plano

      - name: Install Python and Robot Framework
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Robot Framework dependencies
        run: |
          pip install robotframework
          pip install robotframework-yamllibrary
          pip install robotframework-requests
          pip install robot-mongodb-library

      - name: Run Robot Framework tests
        run: |
          robot --outputdir results --xunit output.xml tests/
        continue-on-error: true

      - name: Generate detailed test summary
        if: always()
        run: |
          echo "# 🤖 Robot Framework Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|---------|" >> $GITHUB_STEP_SUMMARY
          
          # Função para extrair valores do XML usando xmllint
          get_stat() {
            xmllint --xpath "string(//statistics/total/stat[$1]/@pass)" results/output.xml
          }
          
          # Extrair estatísticas usando xpath
          TOTAL=$(xmllint --xpath "count(//test)" results/output.xml)
          PASSED=$(xmllint --xpath "count(//test[@status='PASS'])" results/output.xml)
          FAILED=$(xmllint --xpath "count(//test[@status='FAIL'])" results/output.xml)
          SKIPPED=0
          
          # Extrair duração
          DURATION=$(xmllint --xpath "string(/robot/@generated)" results/output.xml)
          START_TIME=$(xmllint --xpath "string(/robot/suite/@starttime)" results/output.xml)
          END_TIME=$(xmllint --xpath "string(/robot/suite/@endtime)" results/output.xml)
          
          # Formatando a tabela
          echo "| Total Tests | ${TOTAL%%.*} |" >> $GITHUB_STEP_SUMMARY
          echo "| ✅ Passed | ${PASSED%%.*} |" >> $GITHUB_STEP_SUMMARY
          echo "| ❌ Failed | ${FAILED%%.*} |" >> $GITHUB_STEP_SUMMARY
          echo "| ⏭️ Skipped | $SKIPPED |" >> $GITHUB_STEP_SUMMARY
          echo "| ⏱️ Duration | $(echo $DURATION | grep -oP '\d+\:\d+\:\d+') |" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${FAILED%%.*}" != "0" ]; then
            echo "## ❌ Failed Tests" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Test Case | Error Message |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|---------------|" >> $GITHUB_STEP_SUMMARY
            
            xmllint --xpath "//test[@status='FAIL']" results/output.xml | while IFS= read -r test; do
              TEST_NAME=$(echo "$test" | grep -oP 'name="\K[^"]+')
              ERROR_MSG=$(echo "$test" | grep -oP '<msg>\K[^<]+')
              echo "| $TEST_NAME | $ERROR_MSG |" >> $GITHUB_STEP_SUMMARY
            done
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-framework-results
          path: |
            results/report.html
            results/log.html
            results/output.xml
          retention-days: 30

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "results/output.xml"
          report_individual_runs: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
